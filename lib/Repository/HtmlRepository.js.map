{"version":3,"sources":["../../src/Repository/HtmlRepository.js"],"names":["HtmlRepository","constructor","projectFolder","file","url","path","join","getProjectsHtmlFolder","name","projectsPathHtml","fs","existsSync","mkdirSync"],"mappings":"6FACA,8CACA,yDACA,kD,kFAEA;;GAGe,KAAMA,CAAAA,cAAe,CAChC;;OADgC,CAMhC;;OAGAC,WAAW,CAACC,aAAD,CAAwB,CAC/B,KAAKA,aAAL,CAAqBA,aACxB,CAED;;OAGAC,IAAI,CAACC,GAAD,CAAmB,CACnB,MAAOC,eAAKC,IAAL,CAAU,KAAKC,qBAAL,EAAV,CAAwCH,GAAG,CAACI,IAAJ,CAAW,OAAnD,CACV,CAED;;;OAIAD,qBAAqB,EAAW,CAC5B,GAAIE,CAAAA,gBAAgB,CAAGJ,cAAKC,IAAL,CAAU,KAAKJ,aAAf,CAA8B,MAA9B,CAAvB,CACA,GAAI,CAACQ,YAAGC,UAAH,CAAcF,gBAAd,CAAL,CAAsC,CAClCC,YAAGE,SAAH,CAAaH,gBAAb,CACH,CACD,MAAOA,CAAAA,gBACV,CA9B+B,C","sourcesContent":["// @flow\nimport fs from \"fs\";\nimport Url from \"../Model/Url\";\nimport path from \"path\";\n\n/**\n * Save the url html to file.\n */\nexport default class HtmlRepository {\n    /**\n     * Location to the html folder in the project.\n     */\n    projectFolder: string;\n\n    /**\n     * Build a json url repo.\n     */\n    constructor(projectFolder: string) {\n        this.projectFolder = projectFolder;\n    }\n\n    /**\n     * Gets the full path to the html file.\n     */\n    file(url: Url): string {\n        return path.join(this.getProjectsHtmlFolder(), url.name + '.html');\n    }\n\n    /**\n     * Creates the html folder in the project if it doesn't exist.\n     * @returns {string} for the html folder.\n     */\n    getProjectsHtmlFolder(): string {\n        let projectsPathHtml = path.join(this.projectFolder, 'html');\n        if (!fs.existsSync(projectsPathHtml)) {\n            fs.mkdirSync(projectsPathHtml);\n        }\n        return projectsPathHtml;\n    }\n}"],"file":"HtmlRepository.js"}