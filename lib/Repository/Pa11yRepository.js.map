{"version":3,"sources":["../../src/Repository/Pa11yRepository.js"],"names":["pa11y","require","fs","path","Option","Progress","HtmlRepository","Pa11yRepository","constructor","option","args","currentUrl","test","urlsToGet","started","progress","updated","createFolder","htmlRepository","getProjectPath","urls","filter","url","existsSync","join","folder","name","endsWith","errorCount","length","scanLocation","file","remote","fragment","results","a11y","jsonFile","writeFile","JSON","stringify","err","tested","update","output","filename","getSiteName","mkdirSync","module","exports"],"mappings":"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","sourcesContent":["const pa11y = require('pa11y');\nconst fs = require('fs');\nconst path = require(\"path\");\nconst Option = require('../Model/Option');\nconst Progress = require('../Model/Progress');\nconst HtmlRepository = require('../Repository/HtmlRepository');\n\nclass Pa11yRepository {\n    /**\n     * @param option {Option}\n     * @param args {Args}\n     */\n    constructor(option, args) {\n        /**\n         * @type {Option}\n         */\n        this.option = option;\n        this.args = args;\n        /**\n         * @type {Url}\n         */\n        this.currentUrl = null;\n    }\n\n    /**\n     * Test a bunch of urls.\n     * @param urlsToGet {Array.<Url>}\n     * @param started {function}\n     * @param updated  {function}\n     * @return {Progress}\n     */\n    async test(urlsToGet, started = (progress) => {}, updated = (progress) => {}) {\n        this.createFolder();\n        let htmlRepository = new HtmlRepository(this.args.getProjectPath());\n        let urls = urlsToGet.filter(url => {\n            return !fs.existsSync(path.join(this.folder, url.name + '.json'));\n        }).filter(url => {\n            return !url.url.endsWith('.pdf')\n        }).filter(url => {\n            return url.errorCount < 3;\n        });\n\n        let progress = new Progress(null, urls.length);\n        started(progress);\n        for (let url of urls) {\n            let scanLocation = htmlRepository.file(url);\n            if(this.args.remote) {\n                scanLocation = url.url + url.fragment;\n            }\n            // noinspection JSUnusedGlobalSymbols\n            this.currentUrl = url;\n            const results = await pa11y(scanLocation, this.option.a11y);\n            const jsonFile = path.join(this.folder, url.name + '.json');\n            await fs.writeFile(jsonFile, JSON.stringify(results), (err) => {});\n            url.tested = true;\n            progress.update(url);\n            updated(progress);\n        }\n        return new Progress(null, urls.length);\n    }\n\n    /**\n     * Create project folder.\n     */\n    createFolder() {\n        this.folder = path.join(this.args.output.filename, this.args.getSiteName(), 'a11y');\n        if (!fs.existsSync(this.folder)) {\n            fs.mkdirSync(this.folder)\n        }\n    }\n}\n\nmodule.exports = Pa11yRepository;"],"file":"Pa11yRepository.js"}